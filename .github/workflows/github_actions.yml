name: AlphaPulldown-github-CI

on: [pull_request, push]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10.12"]
        install-type: ['user', 'developer']

    steps:
      - uses: actions/checkout@v4
        with:
            submodules: recursive
      - name: Debug List Directory
        run: ls -la -R
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Add Conda to System Path
        run: |
          pwd
          echo $CONDA/bin >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/alphapulldown" >> $GITHUB_PATH

      - name: Install AlphaPulldown for user
        if: matrix.install-type == 'user'
        run: |
          conda create -n AlphaPulldown -c omnia -c bioconda -c conda-forge python==${{ matrix.python-version }} openmm==8.0 pdbfixer==1.9 kalign2 cctbx-base pytest importlib_metadata       
          eval "$(conda shell.bash hook)"
          conda activate AlphaPulldown
          conda install -c bioconda hmmer hhsuite
          pip install alphapulldown

      - name: Install AlphaPulldown for developer
        if: matrix.install-type == 'developer'
        run: |
          conda create -n AlphaPulldown -c omnia -c bioconda -c conda-forge python==${{ matrix.python-version }} openmm==8.0 pdbfixer==1.9 kalign2 cctbx-base pytest importlib_metadata       
          eval "$(conda shell.bash hook)"
          conda activate AlphaPulldown
          conda install -c bioconda hmmer hhsuite
          pip install -e .
          pip install -e alphapulldown/ColabFold --no-deps
          pip install -e alphafold --no-deps

      - name: Install dependencies in AlphaLink2 setup.py
        run: |
          eval "$(conda shell.bash hook)"
          export WORKDIRPATH=$PWD
          conda activate AlphaPulldown
          cd $WORKDIRPATH/AlphaLink2 && python3 setup.py install

      - name: Install dependencies in AlphaFold setup.py 
        run: |
          eval "$(conda shell.bash hook)"
          export WORKDIRPATH=$PWD
          conda activate AlphaPulldown
          pip install protobuf==4.23.0 ml-dtypes==0.2.0
          pip install jax==0.4.20 jaxlib==0.4.16+cuda11.cudnn86 -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html

      - name: Install Pytorch Dependencies
        run: |
          eval "$(conda shell.bash hook)"
          conda activate AlphaPulldown
          pip install torch --pre -f https://download.pytorch.org/whl/nightly/cu121/torch_nightly.html 

      - name: Check imports of submodules
        run : |
          eval "$(conda shell.bash hook)"
          conda activate AlphaPulldown
          pip install torch --pre -f https://download.pytorch.org/whl/nightly/cu121/torch_nightly.html 
          git clone https://github.com/dptech-corp/Uni-Core.git
          cd Uni-Core
          python3 setup.py install --disable-cuda-ext
          python -c "from colabfold.batch import get_queries, unserialize_msa, get_msa_and_templates, msa_to_str, build_monomer_feature, parse_fasta"

      - name: Run Tests
        run: |
          eval "$(conda shell.bash hook)"
          conda activate AlphaPulldown
          pytest -s test/test_custom_db.py
          pytest -s test/test_features_with_templates.py
          pytest -s test/test_remove_clashes_low_plddt.py
